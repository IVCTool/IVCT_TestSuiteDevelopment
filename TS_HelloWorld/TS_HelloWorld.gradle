buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
}

plugins {
    // JIB Container Support for Java applications
  id 'com.google.cloud.tools.jib' version '3.1.1'
}

// use java application packaging feature
//apply plugin: 'java-library'
apply plugin: 'application'
mainClassName = 'de.fraunhofer.iosb.tc_helloworld.Run'

// docker image configuration for googles JIB
jib {
	from {
		image = 'busybox'
	}
	to {
		image = "ivct/ts-helloworld:${helloWorldVersion}"
	}
	container {
		entrypoint = ['sh', '-c', 'echo starting TS_HelloWorld test suite container']
		creationTime = 'USE_CURRENT_TIMESTAMP'
		volumes ["/root/conf/TestSuites/TS_HelloWorld-${helloWorldVersion}:TS_HelloWorld-${helloWorldVersion}"]
	}
	extraDirectories {
		paths {
			path {
				// TODO: this required dependency on jar build 
				from = file('build/libs')
				into = "/root/conf/TestSuites/TS_HelloWorld-${helloWorldVersion}/lib"
				includes = ["TS_HelloWorld-${helloWorldVersion}.jar"]
			}
		}
	}
}

dependencies {
	compileOnly     libraries.ieee_lib
	compileOnly     libraries.tc_lib
	compileOnly     libraries.slf4j_api
	compileOnly		libraries.jsonSimple

	testImplementation libraries.tc_lib
	testImplementation "io.github.ivctool:Command:${ivctVersion}"
	testImplementation files("$System.env.LRC_CLASSPATH")
	testImplementation libraries.junit_jupiter_engine
	testImplementation libraries.activemqEmbedded
	testImplementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
	//testImplementation group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.7.0'

    // JAX-B dependencies for JDK 9+
//    testImplementation "jakarta.xml.bind:jakarta.xml.bind-api:3.0.0"
//    testImplementation "org.glassfish.jaxb:jaxb-runtime:3.0.0"
}

test {
	useJUnitPlatform()

	//	exclude '**/CountryValuesTest**'

}


// Write the  IVCT-Version as set to variable in libraries.gradle
// in a  property-file
task writeVersion {
	group = "Build"
	description = "Creates a properties file with version information"

	doLast {
		def prop = new Properties()
		prop.version = ivctVersion
		prop.ivctVersion = ivctVersion
		prop.helloWorldVersion = helloWorldVersion
		prop.build = "git describe --tags".execute().text.trim()
		mkdir "src/main/resources"
		File propFile = file('src/main/resources/testCaseBuild.properties')
		prop.store(propFile.newWriter(), null)
	}
}
processResources.dependsOn writeVersion

// write IVCT-Version informations to manifest - file
jar{
	manifest{
		attributes(
				'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(new Date()),
				'ivctVersion' : ivctVersion,
				'build' :       "git describe --tags".execute().text.trim()
				)
	}
}
