buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
}

plugins {
	// use java application packaging feature
	id 'application'
}

mainClassName = 'de.fraunhofer.iosb.tc_helloworld.Run'

task dockerBuildImage (type: Exec) {
	group = 'Docker'
	description = 'command line task to create docker image'
	executable 'docker'
	args 'build', '-t', "ivct/ts-helloworld:${helloWorldVersion}", '--build-arg', "version=${helloWorldVersion}", '.'
	dependsOn('distTar')
}

dependencies {
	compileOnly     libraries.ieee_lib
	compileOnly     libraries.slf4j_api
	compileOnly     libraries.jsonSimple
	implementation  libraries.tc_lib

	testImplementation libraries.ieee_lib
	testImplementation libraries.tc_lib
	testImplementation libraries.slf4j_api
	testImplementation libraries.jsonSimple
	testImplementation "io.github.ivctool:Command:${ivctVersion}"
	testImplementation files("$System.env.LRC_CLASSPATH")
	testImplementation libraries.junit_jupiter_engine
	testImplementation libraries.activemqEmbedded
	// testImplementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
	// testImplementation group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.7.0'

    // JAX-B dependencies for JDK 9+
	// testImplementation "jakarta.xml.bind:jakarta.xml.bind-api:3.0.0"
	// testImplementation "org.glassfish.jaxb:jaxb-runtime:3.0.0"
}

test {
	useJUnitPlatform()

	//	exclude '**/CountryValuesTest**'

}


// Write the  IVCT-Version as set to variable in libraries.gradle
// in a  property-file
task writeVersion {
	group = "Build"
	description = "Creates a properties file with version information"

	doLast {
		def prop = new Properties()
		prop.version = ivctVersion
		prop.ivctVersion = ivctVersion
		prop.helloWorldVersion = helloWorldVersion
		prop.build = "git describe --tags".execute().text.trim()
		mkdir "src/main/resources"
		File propFile = file('src/main/resources/testCaseBuild.properties')
		prop.store(propFile.newWriter(), null)
	}
}
processResources.dependsOn writeVersion

// write IVCT-Version informations to manifest - file
jar{
	manifest{
		attributes(
				'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(new Date()),
				'ivctVersion' : ivctVersion,
				'build' :       "git describe --tags".execute().text.trim()
				)
	}
}
