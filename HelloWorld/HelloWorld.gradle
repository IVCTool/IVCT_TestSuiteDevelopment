buildscript {
    repositories {
		mavenLocal()
		mavenCentral()
	}
}

plugins {
    // JIB Container Support for Java applications
  id 'com.google.cloud.tools.jib' version '3.1.2'
}

apply plugin: 'application'

mainClassName = 'de.fraunhofer.iosb.helloworld.HelloWorld'

// setup the common jib configuration
task jibApplication () {
    doFirst {
        jib {
            container {
                entrypoint = 'INHERIT'
                creationTime = 'USE_CURRENT_TIMESTAMP'
                environment = ['LRC_ENTRYPOINT': '/root/application/start.sh']
            }
            extraDirectories {
                paths {
                    path {
                        from = file('docker')
                        into = '/root/application'
                    }
                    path {
                        from = file('src/main/resources')
                        into = '/usr/local/lrc'
                    }
                }
                permissions = ['/root/application/start.sh': '755']
            }
        }
    }
}

//task jibPitch (type: com.google.cloud.tools.jib.gradle.BuildImageTask) {
task jibPitch (type: com.google.cloud.tools.jib.gradle.BuildDockerTask) {
    group = 'Docker'
    description = 'Creates images for the Portico RTI'
    jibExtension = project.extensions.getByName('jib')
    dependsOn jibApplication
    doFirst {
        jib {
            from {
                image = 'hlacontainers/lrc:pitch-skeleton-alpine'
            }
            to {
                image = "ivct/helloworld:pi-skeleton-${helloWorldVersion}"
                tags = ["pi-latest"]
            }
        }
    }
}

//task jibPortico (type: com.google.cloud.tools.jib.gradle.BuildImageTask) {
task jibPortico (type: com.google.cloud.tools.jib.gradle.BuildDockerTask) {
    group = 'Docker'
    description = 'Creates images for the Portico RTI'
    jibExtension = project.extensions.getByName('jib')
    dependsOn jibApplication
    doFirst {
        jib {
            from {
                image = 'hlacontainers/lrc:portico-nightly-2016.05.28-alpine'
            }
            to {
                image = "ivct/helloworld:po-${helloWorldVersion}"
                tags = ["po-latest"]
            }
        }
    }
}

//task jibMak (type: com.google.cloud.tools.jib.gradle.BuildImageTask) {
task jibMak (type: com.google.cloud.tools.jib.gradle.BuildDockerTask) {
    group = 'Docker'
    description = 'Creates images for the MaK RTI'
    jibExtension = project.extensions.getByName('jib')
    dependsOn jibApplication
    doFirst {
        jib {
            from {
                image = 'hlacontainers/lrc:vtmak-4.5f-centos7'
            }
            to {
                image = "ivct/helloworld:ma-${helloWorldVersion}"
                tags = ["ma-latest"]
            }
        }
    }
}

dependencies {
    compileOnly group: 'io.github.msg134', name: 'IEEE1516e', version: ivctVersion
    compile     libraries.slf4j_api
    runtime     libraries.logback_classic
	runtime     libraries.logback_core
    runtime     files("$System.env.LRC_CLASSPATH")
}
